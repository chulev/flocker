version: '3.8'

services:
  flocker:
    container_name: flocker
    build:
      context: .
      target: dev
    command: bun dev
    restart: always
    env_file: .env.local
    depends_on:
      flocker-migration:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

  flocker-migration:
    container_name: flocker-migration
    build:
      context: .
      target: dev
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env.local
    command: bun db:migrate latest

  postgres:
    container_name: postgres
    build:
      context: .
      target: extensions
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: flocker
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:latest
    command: ['redis-server', '--requirepass pass']
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli', '-a', 'pass', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 6379:6379
    volumes:
      - redis:/data
      - redis-config:/usr/local/etc/redis/redis.conf

volumes:
  postgres_data:
  redis:
  redis-config:
